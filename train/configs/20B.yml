# GPT-2 pretraining setup                                                                                                                                                                
{                                                                                                                                                                                        
  "save": "logs/eval/20B/checkpoints",
  "load": "logs/eval/20B/checkpoints",
   # parallelism settings ( you will want to change these based on your cluster setup, ideally scheduling pipeline stages                                                                
   # across the node boundaries )                                                                                                                                                        
   "pipe-parallel-size": 4,                                                                                                                                                              
   "model-parallel-size": 2,                                                                                                                                                             
                                                                                                                                                                                         
   # model settings                                                                                                                                                                      
   "num-layers": 44,                                                                                                                                                                     
   "hidden-size": 6144,                                                                                                                                                                  
   "num-attention-heads": 64,                                                                                                                                                            
   "seq-length": 2048,                                                                                                                                                                   
   "max-position-embeddings": 2048,                                                                                                                                                      
   "norm": "layernorm",                                                                                                                                                                  
   "pos-emb": "rotary",
   "rotary_pct": 0.25,
   "no-weight-tying": true,
   "gpt_j_residual": true,                                                                                                                                                           
   "output_layer_parallelism": "column",
   # these should provide some speedup but takes a while to build, set to true if desired                                                                                                
   "scaled-upper-triang-masked-softmax-fusion": true,                                                                                                                                   
   "bias-gelu-fusion": true,  

   # init methods
   "init_method": "small_init",
   "output_layer_init_method": "wang_init",
                                                                                                                                                          
                                                                                                                                                                                         
   # optimizer settings                                                                                                                                                                  
   "optimizer": {                                                                                                                                                                        
     "type": "Adam",                                                                                                                                                                     
     "params": {                                                                                                                                                                         
       "lr": 0.97e-4,  
        "betas": [0.9, 0.95],
        "eps": 1.0e-8,
        }
        },
    
    "min_lr": 0.97e-5,
    "zero_optimization": {
    "stage": 1,
    "allgather_partitions": True,
    "allgather_bucket_size": 1260000000,
    "overlap_comm": True,
    "reduce_scatter": True,
    "reduce_bucket_size": 1260000000,
    "contiguous_gradients": True,
    "cpu_offload": False
    },

    # batch / data settings (assuming 96 GPUs)
    "train_micro_batch_size_per_gpu": 4,
    "gradient_accumulation_steps": 32,
    "data-impl": "mmap",
    "split": "995,4,1",
    
    # activation checkpointing
    "checkpoint-activations": true,
    "checkpoint-num-layers": 1,
    "partition-activations": false,
    "synchronize-each-layer": true,

    # regularization
    "gradient_clipping": 1.0,
    "weight-decay": 0.01,
    "hidden-dropout": 0,
    "attention-dropout": 0,

    # precision settings
    "fp16": { 
      "fp16": true,
      "enabled": true,
      "loss_scale": 0,
      "loss_scale_window": 1000,
      "initial_scale_power": 12,
      "hysteresis": 2,
      "min_loss_scale": 1
      },

    # misc. training settings
    "train-iters": 150000,
    "lr-decay-iters": 150000,
    
    "distributed-backend": "nccl",
    "lr-decay-style": "cosine",
    "warmup": 0.01,
    "eval-interval": 1000,
    "checkpoint-factor": 50,
    "eval-iters": 10,
#     "eval_tasks": ["lambada", "piqa", "hellaswag", "winogrande", "mathqa", "pubmedqa"],

    # logging
    "log-interval": 2,
    "steps_per_print": 2,
    "wall_clock_breakdown": false,

    ### NEW DATA: ####
    "tokenizer_type": "HFTokenizer",
    "vocab-file": "logs/eval/20B/checkpoints/20B_tokenizer.json",
    "data-path": "/mnt/ssd-1/data/pile_20B_tokenizer/pile_20B_tokenizer_text_document",


    }
